---
- name: Deploy Secure Portfolio Web Server (HTTPS)
  hosts: webservers
  tasks:
    
    # --- 1. INSTALLATION AND SETUP ---

    - name: 1. Ensure essential packages are installed for Certbot and Nginx
      ansible.builtin.apt:
        name: 
          - certbot
          - python3-certbot-nginx 
          - ca-certificates
          - curl
          - gnupg
          - python3-pip
        state: present
        update_cache: yes
      become: yes

    - name: 2. Install Docker via official Convenience Script (quick and reliable install)
      ansible.builtin.shell: 
        cmd: curl -fsSL https://get.docker.com | sh
      become: yes

    - name: 3. Install Python Docker Module
      ansible.builtin.apt:
        name: python3-docker
        state: present
      become: yes

    - name: 4. Ensure Docker bridge network 'proxy_net' exists
      community.docker.docker_network:
        name: proxy_net
        state: present
      become: yes

    # --- 2. DEPLOY CONTENT AND PREPARE HOST DIRECTORIES ---

    - name: 5. Create required HTML and SSL directories on host
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      loop:
        - /app/data
        - /app/html
        - /etc/letsencrypt/live/shayleeczech.com # Directory for Certbot output
        # Removed obsolete paths: /app/data, /app/mysql, /app/letsencrypt
      become: yes

    - name: 6. Place custom index.html (File copy from repo)
      ansible.builtin.copy:
        src: index.html 
        dest: /app/html/index.html
        owner: root
        group: root
        mode: '0644'
      notify: Restart Nginx Container
      become: yes

 # --- 3. STOP NGINX AND RUN CERTBOT CHALLENGE ---

    - name: 7. Stop Nginx container and run Certbot challenge
      ansible.builtin.shell: |
        # 7A. AGGRESSIVE CLEANUP: Stop Docker container
        docker stop portfolio-web || true
        docker rm portfolio-web || true
        
        # 7B. AGGRESSIVE PORT CLEANUP: Forcefully kill any process using Port 80
        fuser -k -n tcp 80 || true
        # Restart the Docker service to clear lingering network bindings
        systemctl restart docker
        
        # Give system a moment to clear the port
        sleep 5
        
        # 7C. CERTBOT RUN: Use --nginx plugin which handles temporary serving and cleanup
        certbot certonly --nginx -d shayleeczech.com -d www.shayleeczech.com --non-interactive --agree-tos -m shayleeczech@gmail.com --no-self-upgrade --force-renewal
      become: yes
      register: certbot_result
      failed_when: certbot_result.rc != 0 and 'Certificate not yet due for renewal' not in certbot_result.stderr

    # --- 4. DEPLOY SSL CONFIG AND START CONTAINERS ---

    - name: 8. Deploy Nginx SSL Configuration File
      ansible.builtin.copy:
        src: nginx_ssl.conf
        dest: /etc/nginx/sites-available/default
        owner: root
        group: root
        mode: '0644'
      notify: Restart Nginx Container
      become: yes

    - name: 9. Start Final Nginx Container with SSL
      community.docker.docker_container:
        name: portfolio-web # Renamed to simple portfolio-web
        image: nginx:latest
        state: started
        restart_policy: always
        published_ports:
          - "80:80"
          - "443:443"
        volumes:
          - /app/html:/usr/share/nginx/html:ro
          - /etc/letsencrypt:/etc/letsencrypt:ro # Mount certs for Nginx to read
        networks:
          - name: proxy_net
        recreate: true
      become: yes

  # --- HANDLERS ---
  handlers:
    - name: Restart Nginx Container
      community.docker.docker_container:
        name: portfolio-web
        image: nginx:latest
        state: started
        restart_policy: always
        published_ports:
          - "80:80"
          - "443:443"
        volumes:
          - /app/html:/usr/share/nginx/html:ro
          - /etc/letsencrypt:/etc/letsencrypt:ro
        networks:
          - name: proxy_net
        recreate: true
      become: yes
