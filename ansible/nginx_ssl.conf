server {
    # Server block for Certbot HTTP challenge and final HTTP to HTTPS redirect
    listen 80;
    server_name shayleeczech.com www.shayleeczech.com;

    # Serve files from the application root
    root /usr/share/nginx/html;
    index index.html;

    location /.well-known/acme-challenge/ {
        # Allow Certbot to access the challenge files for domain validation
        allow all;
    }

    location / {
        # Permanent redirect to HTTPS
        return 301 https://$host$request_uri;
    }
}

server {
    # Server block for HTTPS
    listen 443 ssl http2;
    server_name shayleeczech.com www.shayleeczech.com;

    # References the certificate files created by Certbot
    ssl_certificate /etc/letsencrypt/live/shayleeczech.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/shayleeczech.com/privkey.pem;

    # Secure SSL Settings (A+ rated security)
    ssl_session_cache shared:SSL:10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;

    root /usr/share/nginx/html;
    index index.html;
    # INSERT THIS LOCATION BLOCK inside the server { listen 443 ssl... } block

    location /api/stats {
        # Forward the request to the Node.js container (stats-api).
        # We use 'http://localhost:3000' because both containers share the host network.
        proxy_pass http://localhost:3000/api/stats;
        
        # Recommended headers for proxying
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
    }
    
    location / {
        try_files $uri $uri/ =404;
    }
}